-- select target column from table where condition
-- from(table) > where(condition, filter row) > select (print, filter col)
-- AS is alias if name is too long 
select
	id as pocketmon,
	kor_name
from pokemon 
where 
	type1 = "Fire";

-- show every(col, row) data on trainer table
SELECT
	*
from trainer;

-- show trainer name on trainer table
SELECT
	name as trainer_name
FROM trainer;

--show trainer age and name on trainer table 
SELECT
	name,
	age
FROM trainer;

-- show trainer name,age,hometown whose id is 3
SELECT 
	name,
	age,
	hometown
FROM trainer
WHERE
	id = 3;
	
-- show 피카츄's attack power and HP 
SELECT
	kor_name,
	attack,
	hp
FROM pokemon
WHERE
	kor_name="피카츄";

-- GROUPBY : standard col using for gethering 
-- COUNT : calculation using for gethered data
-- count number of pokemon in pokemon table 
SELECT
	count(id) as count
FROM pokemon;

-- count number of pokemon for each generation
-- for each : generation
-- calculate : count 
SELECT
	generation,
	count(id)
FROM pokemon
GROUP BY
	generation;
--having used for new column generated by calculation
-- from where
-- group by calculation having 

SELECT
	type1,
	count(id) as cnt
FROM pokemon
GROUP BY 
	type1
HAVING
	cnt >=10
ORDER BY cnt DESC;

--calculate number of pokemon without type2
SELECT
	count(id) as count
FROM pokemon
GROUP BY
	type2
HAVING 
	type2 IS NULL;
	
-- count number of type1 where type2 is null
SELECT
	type1,
	count(id) as cnt
FROM pokemon
WHERE
	type2 IS NULL
GROUP BY
	type1
ORDER BY
	cnt DESC;

-- count number of type1 
SELECT
	type1,
	count(id) as id
FROM pokemon
GROUP BY
	type1;
	
-- count number of pokemon whether legnedary or not 
SELECT
	is_legendary,
	count(id) as cnt
FROM pokemon 
GROUP BY 
	is_legendary;

-- find name which more than one people have
SELECT
	name
FROM trainer
GROUP BY name 
HAVING count(id) >=2;

--show trainer Iris's information
SELECT
	*
FROM trainer
WHERE
	name = "Iris";
	
-- count number of pokemon with vaild value of type2
SELECT
	count(id) as cnt
FROM pokemon
WHERE
	type2 IS NOT NULL;

-- maximum type1 pokemon with type2
SELECT
	type1,
	count(id) as cnt
FROM pokemon
WHERE 
	type2 IS NOT NULL
GROUP BY
	type1
ORDER BY cnt DESC
LIMIT 1;

-- the most type1 of pokemon with single type1
SELECT
	type1
FROM pokemon
WHERE 
	type2 IS NULL
GROUP BY type1
ORDER BY count(id) DESC
LIMIT 1;

--pokemon having 파 in its name
SELECT
	kor_name
FROM pokemon
WHERE 
	kor_name LIKE "파%";

-- number of trainer with more than six badge
SELECT
	count(id) as cnt
FROM trainer
WHERE
	badge_count >=6;

-- trainer who has most number of pokemon
SELECT
	trainer_id
FROM trainer_pokemon
GROUP BY trainer_id
ORDER BY count(id) DESC
LIMIT 1;

-- trainer who has release most number of pokemon
SELECT
	trainer_id
FROM trainer_pokemon
WHERE
	status = "Released"
GROUP BY
	trainer_id
ORDER BY
	count(id) DESC
LIMIT 1;

-- trainers who have released more than 20% pokemon 
SELECT
	trainer_id,
	1.0*SUM(CASE WHEN status = 'Released' THEN 1 ELSE 0 END)/count(id) as ratio
FROM trainer_pokemon
GROUP BY trainer_id
HAVING
	 ratio >=0.2;
	 
--inner join : in both a and b
--left/right join : if not in one side that would be NULL
--full join : in either a or b
--from table1 as A ... is base table 
--left join table2 as b ... combined table to base, type of join
--on a.key = b.KEY ... target column to compare for join
SELECT 
	tp.*,
	t.*,
	p.*
FROM trainer_pokemon as tp
LEFT JOIN trainer as t
ON tp.trainer_id = t.id
LEFT JOIN pokemon as p
ON tp.pokemon_id = p.id;

--number of pokemon along with trainer 
SELECT
	p.kor_name,
	count(tp.trainer_id) as cnt
FROM(
	SELECT
		pokemon_id,
		trainer_id
	FROM trainer_pokemon
	WHERE
		status in ("Active","Training")
)AS tp
LEFT JOIN pokemon as p
ON tp.pokemon_id = p.id
GROUP BY p.id
ORDER BY cnt DESC;

--number of grass type pokemon belong to each trainer
SELECT
	t.name,
	count(p.id) as cnt
FROM
(
	SELECT 
		trainer_id,
		pokemon_id
	FROM trainer_pokemon
	WHERE status in ("Active", "Training")
) as tp
LEFT JOIN pokemon as p
ON tp.pokemon_id=p.id
LEFT JOIN trainer as t
on tp.trainer_id=t.id
WHERE p.type1 = "Grass"
GROUP BY t.id;

--number of trainer catching pokemon at their hometown
SELECT
	COUNT(DISTINCT tp.trainer_id) as cnt
FROM trainer_pokemon as tp
LEFT JOIN 
(
	SELECT
		id,
		hometown
	FROM trainer 
)as t
ON tp.trainer_id = t.id
WHERE tp.location = t.hometown;

--type of pokemon catched by master the most
SELECT
	COUNT(tp.id) as cnt
FROM
(
	SELECT
		id,
		trainer_id,
		pokemon_id
	FROM trainer_pokemon
	WHERE status in ("Active", "Training")
) as tp
LEFT JOIN pocketmon as p
ON tp.pokemon_id = p.id
LEFT JOIN trainer as t
ON tp.pokemon_id = t.id
WHERE t.achievement_level = "Master"
GROUP BY p.type1
ORDER BY cnt DESC
LIMIT 1;

--number of pokemon each generation along with trainer from incheon
SELECT
	p.generation,
	COUNT(tp.id) as cnt
FROM
(
	SELECT
		id,
		trainer_id,
		pokemon_id
	FROM trainer_pokemon
	WHERE status in ("Active", "Training")
) as tp
LEFT JOIN pocketmon as p
ON tp.pokemon_id = p.id
LEFT JOIN trainer as t
ON tp.pokemon_id = t.id
WHERE t.hometown ="Incheon"
GROUP BY p.generation;